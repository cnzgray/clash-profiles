# Stash专用
########################################################################分隔符
pq: &pq {type: http, interval: 86400, health-check: {enable: true, url: https://www.gstatic.com/generate_204, interval: 600, format: yaml}}    #####   订阅锚点   #####
# url 里填写自己的订阅,订阅名称不能重复
proxy-providers:
  sub1:    ###订阅名称###
    <<: *pq
    url: ""

  # sub2:    ###订阅名称###
  #   <<: *pq
  #   url: ""

pp: &pp {use: [ sub1 ]}   #####   机场合集   #####
########################################################################分隔符

######### 锚点 begin #########
wifi-direct: &wifi-direct
  # WIFI1: 🎯 全球直连
  # WIFI2: 🎯 全球直连
sp: &sp {<<: *wifi-direct, cellular: 🚀 节点选择, default: 🚀 节点选择}

pc: &pc {type: http, behavior: classical, interval: 86400, format: yaml}    #####   rule-providers锚点   #####
pd: &pd {type: http, behavior: domain, interval: 86400, format: yaml}    #####   rule-providers锚点   #####
pi: &pi {type: http, behavior: ipcidr, interval: 86400, format: yaml}    #####   rule-providers锚点   #####
o1: &o1 {type: select, proxies: [🚀 节点选择, ♻️ 自动选择, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇰🇷 韩国节点, 🇺🇸 美国节点, 🎯 全球直连], <<: *pp, ssid-policy: {<<: *sp}}    ######  策略组描点   ######
o2: &o2 {type: select, proxies: [🎯 全球直连, 🚀 节点选择, ♻️ 自动选择, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇰🇷 韩国节点, 🇺🇸 美国节点]}    ######  策略组描点   ######
ot: &ot {type: url-test, interval: 600, tolerance: 100, lazy: true, url: https://www.gstatic.com/generate_204, <<: *pp} #####   策略组描点   #####
######### 锚点 end #########

########################################################################分隔符
proxy-groups:
  - {name: 🚀 节点选择, type: select, proxies: [♻️ 自动选择, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇸 美国节点], <<: *pp}
  - {name: ♻️ 自动选择, <<: *ot}
  - {name: 📲 电报信息, <<: *o1}
  - {name: 📱 Twitter, <<: *o1}
  - {name: 💬 OpenAi, <<: *o1}
  - {name: 🎬 油管视频, <<: *o1}
  - {name: 🎥 奈飞视频, <<: *o1}
  - {name: 🏰 Disney, <<: *o1}
  - {name: 📽️ 巴哈姆特, type: select, proxies: [🇨🇳 台湾节点, 🇭🇰 香港节点, 🚀 节点选择]}
  - {name: 📺 哔哩哔哩, type: select, proxies: [🎯 全球直连, 🇨🇳 台湾节点, 🇭🇰 香港节点]}
  - {name: 🌎 国外媒体, <<: *o1}
  - {name: 🌏 国内媒体, type: select, proxies: [🎯 全球直连, 🇨🇳 台湾节点, 🇭🇰 香港节点, 🚀 节点选择]}
  - {name: ☣️ Copilot, <<: *o1}
  - {name: 🍎 苹果服务, <<: *o2}
  - {name: Ⓜ️ 微软服务, <<: *o2}
  - {name: 🎮 游戏平台, <<: *o1}
  - {name: 📥 PT下载, <<: [*o2, *pp]}
  - {name: 🐱 Github, <<: *o1}
  - {name: 🌏 BanJP, type: select, proxies: [🚀 节点选择, ♻️ 自动选择, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇰🇷 韩国节点, 🇺🇸 美国节点]}
  - {name: 🎯 全球直连, type: select, proxies: [DIRECT,REJECT]}
  - {name: 🍃 广告拦截, type: select, proxies: [REJECT,DIRECT]}
  - {name: 🐟 漏网之鱼, <<: *o1}
  #地区策略组
  - {name: 🇭🇰 香港节点, <<: *ot, filter: "(?i)港|hk|hongkong|hong kong"}
  - {name: 🇨🇳 台湾节点, <<: *ot, filter: "(?i)台|tw|taiwan|tai wan"}
  - {name: 🇸🇬 狮城节点, <<: *ot, filter: "(?i)新加坡|sg|singapore|狮城"}
  - {name: 🇯🇵 日本节点, <<: *ot, filter: "(?i)日|jp|japan"}
  - {name: 🇰🇷 韩国节点, <<: *ot, filter: "(?i)韩|kr|korea"}
  - {name: 🇺🇸 美国节点, <<: *ot, filter: "(?i)美|us|unitedstates|united states"}

rules:
  - SCRIPT,quic,REJECT
  - RULE-SET,LocalAreaNetwork,🎯 全球直连
  - RULE-SET,Unban,🎯 全球直连
  - RULE-SET,DirectPT,🎯 全球直连
  - RULE-SET,DirectCN,🎯 全球直连
  - RULE-SET,SteamCN,🎯 全球直连
  - RULE-SET,BanAD,🍃 广告拦截
  - RULE-SET,MyBanAD,🍃 广告拦截
  - RULE-SET,PrivateTracker,📥 PT下载
  - RULE-SET,MyPrivateTracker,📥 PT下载
  - RULE-SET,Telegram,📲 电报信息
  - RULE-SET,Twitter,📱 Twitter
  - RULE-SET,OpenAi,💬 OpenAi
  - RULE-SET,YouTube,🎬 油管视频
  - RULE-SET,Disney,🏰 Disney
  - RULE-SET,Netflix,🎥 奈飞视频
  - RULE-SET,Bahamut,📽️ 巴哈姆特
  - RULE-SET,ProxyMedia,🌎 国外媒体
  - RULE-SET,Category-games,🎮 游戏平台
  - RULE-SET,Bilibili,📺 哔哩哔哩
  - RULE-SET,ChinaMedia,🌏 国内媒体
  - RULE-SET,Copilot,☣️ Copilot
  - RULE-SET,Microsoft,Ⓜ️ 微软服务
  - RULE-SET,Apple,🍎 苹果服务
  - RULE-SET,Github,🐱 Github
  - RULE-SET,BanJP,🌏 BanJP
  - RULE-SET,CustomGFWlist,🚀 节点选择
  - RULE-SET,ProxyGFWlist,🚀 节点选择
  - RULE-SET,ChinaDomain,🎯 全球直连
  - RULE-SET,ChinaCompanyIp,🎯 全球直连,no-resolve
  - RULE-SET,ChinaIp,🎯 全球直连,no-resolve
  - IN-TYPE,INNER,DIRECT # 确保内部流量在无法匹配时走直连
  - MATCH,🐟 漏网之鱼

rule-providers:
  LocalAreaNetwork:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/LocalAreaNetwork.yaml"
  Unban:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/UnBan.yaml"
  DirectPT:
    <<: *pc
    url: "https://raw.githubusercontent.com/cnzgray/clash-profiles/master/DirectPT.list"
    format: text
  DirectCN:
    <<: *pc
    url: "https://raw.githubusercontent.com/cnzgray/clash-profiles/master/DirectCN.list"
    format: text
  MyBanAD:
    <<: *pc
    url: "https://raw.githubusercontent.com/cnzgray/clash-profiles/master/BanAD.list"
    format: text
  BanAD:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/BanAD.yaml"
  Telegram:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Telegram.yaml"
  Twitter:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Twitter.yaml"
  OpenAi:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/OpenAi.yaml"
  YouTube:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/YouTube.yaml"
  Netflix:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Netflix.yaml"
  Disney:
    <<: *pc
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Disney/Disney.yaml" 
  Bahamut:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Bahamut.yaml"
  ProxyMedia:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ProxyMedia.yaml"
  Category-games:
    <<: *pd
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-games.yaml"
  Bilibili:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Bilibili.yaml"
  Download:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Download.yaml"
  ChinaMedia:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaMedia.yaml"
  GoogleFCM:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/GoogleFCM.yaml"  
  Microsoft:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Microsoft.yaml"
  Copilot:
    <<: *pc
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Copilot/Copilot_No_Resolve.yaml"
  Apple:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Apple.yaml"
  Github:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Github.yaml"
  PrivateTracker:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/PrivateTracker.yaml"
  MyPrivateTracker:
    <<: *pc
    url: "https://raw.githubusercontent.com/cnzgray/clash-profiles/master/ProxyPT.list"
    format: text
  ChinaDomain:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaDomain.yaml"
  ChinaCompanyIp:
    <<: *pi
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaCompanyIp.yaml"
  ChinaIp:
    <<: *pi
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaIp.yaml"
  CustomGFWlist:
    <<: *pc
    url: "https://raw.githubusercontent.com/cnzgray/clash-profiles/master/CustomGFWlist.list"
    format: text
  SteamCN:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/SteamCN.list"
    format: text
  ProxyGFWlist:
    <<: *pc
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyGFWlist.list"
    format: text
  BanJP:
    <<: *pc
    url: "https://raw.githubusercontent.com/cnzgray/clash-profiles/master/BanIP_JP.list"
    format: text

script:
  shortcuts:
    # 4483 与 9305 为 BiliBili 的 QUIC CDN
    quic: network == 'udp' and (dst_port == 443 or dst_port == 4483 or dst_port == 9305)

dns:
  default-nameserver:
    - 114.114.115.115
    - 119.28.28.28
    - 223.6.6.6
    - system
  nameserver:
    - https://dns.alidns.com/dns-query
    - https://doh.pub/dns-query
  nameserver-policy:
    'rule-set:ChinaDomain':
      - 'https://doh.pub/dns-query'
      - 'https://dns.alidns.com/dns-query'
    'rule-set:CustomGFWlist,ProxyGFWlist':
      - 'https://dns.cloudflare.com/dns-query#🚀 节点选择'
      - 'https://dns.google/dns-query#🚀 节点选择'
    "geosite:cn,private":
      - https://doh.pub/dns-query
      - https://dns.alidns.com/dns-query
    "geosite:geolocation-!cn":
      - 'https://dns.cloudflare.com/dns-query#🚀 节点选择'
      - 'https://dns.google/dns-query#🚀 节点选择'
    'rule-set:PrivateTracker,MyPrivateTracker':
      - 'https://dns.google/dns-query#📥 PT下载'  
      - 'https://dns.cloudflare.com/dns-query#📥 PT下载'
    'rule-set:BanJP':
      - 'https://dns.google/dns-query#🌏 BanJP'
      - 'https://dns.cloudflare.com/dns-query#🌏 BanJP'
log-level: warning
mode: rule
